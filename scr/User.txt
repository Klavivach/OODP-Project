import java.util.Scanner;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class UserSystem {
    private static final String USER_DATA_FILE = "users.txt";

    private static final String Scanner = null;

    private static User currentUser;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Welcome to the Login Online Market Item!");
            System.out.println("1. Register new user");
            System.out.println("2. Login");
            System.out.println("3. Exit");
            System.out.print("Select an option: ");

            String input = scanner.nextLine();

            switch (input) {
                case "1":
                    register(scanner);
                    break;
                case "2":
                    login(scanner);
                    break;
                case "3":
                    System.out.println("Goodbye!");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid option, please try again.");
            }
        }
    }

    private static void register(Scanner scanner) {
        System.out.println("Please enter a username:");
        String username = scanner.nextLine();

        // Check if username already exists
        if (userExists(username)) {
            System.out.println("Username already exists, please choose a different one.");
            return;
        }

        System.out.println("Please enter a password:");
        String password = scanner.nextLine();

        // Save new user data to file
        try {
            FileWriter writer = new FileWriter(USER_DATA_FILE, true);
            writer.write(username + "," + password + "\n");
            writer.close();
            System.out.println("User registered successfully!");
        } catch (IOException e) {
            System.out.println("Error registering user.");
            e.printStackTrace();
        }
    }

    private static void login(Scanner scanner) {
        System.out.println("Please enter your username:");
        String username = scanner.nextLine();

        System.out.println("Please enter your password:");
        String password = scanner.nextLine();

        // Verify user credentials
        if (verifyUser(username, password)) {
            System.out.println("Login successful!");
            currentUser = new User(username, password);
            // Do something with logged in user
        } else {
            System.out.println("Invalid username or password, please try again.");
        }
    }

    private static boolean userExists(String username) {
        try {
            Scanner scanner = new Scanner(new File(USER_DATA_FILE));
            while (scanner.hasNextLine()) {
                String[] userData = scanner.nextLine().split(",");
                if (userData[0].equals(username)) {
                    return true;
                }
            }
            scanner.close();
        } catch (IOException e) {
            System.out.println("Error reading user data.");
            e.printStackTrace();
        }
        return false;
    }

    private static boolean verifyUser(String username, String password) {
        try {
            Scanner scanner = new Scanner(new File(USER_DATA_FILE));
            while (scanner.hasNextLine()) {
                String[] userData = scanner.nextLine().split(",");
                if (userData[0].equals(username) && userData[1].equals(password)) {
                    scanner.close();
                    return true;
                }
            }
            scanner.close();
        } catch (IOException e) {
            System.out.println("Error reading user data.");
            e.printStackTrace();
        }
        return false;
    }

    private static class User {
        private String username;
        private String password;

        public User(String username, String password) {
            this.username = username;
            this.password = password;
        }

        public String getUsername() {
            return username;
        }

        public String getPassword() {
            return password;
        }
    }
}
